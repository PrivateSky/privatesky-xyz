const n={getController:async n=>{const{controllers:t,basePath:o}=window.WebCardinal;if(t[n])return t[n];try{const t=await import(`${o}/scripts/controllers/${n}.js`);return t.default||t}catch(n){return console.error(n),null}}},t={loadAndSetTranslationForPage:async n=>{var t;const{mapping:o,skinsPath:r}=n,{pathname:a}=window.location,{language:e,translations:s}=window.WebCardinal;if(null===(t=s[e])||void 0===t?void 0:t[a])return;const l=o[a];if(!l)return void console.warn("No HTML page mapping was found for the current pathname: "+a);if(l.startsWith("http"))return void console.warn("Translations for external sources are not supported yet!");let i=l.slice(0,l.lastIndexOf("."));0!==i.indexOf("/")&&(i="/"+i);const c=-1===i.indexOf("/")?i:i.substr(i.lastIndexOf("/")+1),u=`${r}/${e}${i}/${c}.translate.json`;try{const n=await fetch(u),t=await n.json();return s[e]||(s[e]={}),s[e][a]=t,t}catch(n){return console.log(`Error while loading translation for ${e}: ${u}`,n),console.error(n),null}}};export{n as C,t as a}