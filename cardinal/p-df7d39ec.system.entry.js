System.register(["./p-7a13ecf1.system.js","./p-90e1ba03.system.js","./p-ca300ef6.system.js","./p-9221707b.system.js","./p-3f952558.system.js","./p-839127aa.system.js"],(function(e){"use strict";var t,r,n,i,o,s,a;return{setters:[function(e){t=e.r;r=e.h;n=e.H;i=e.g},function(){},function(){},function(e){o=e.T},function(e){s=e.C},function(e){a=e.B}],execute:function(){var l=undefined&&undefined.__decorate||function(e,t,r,n){var i=arguments.length,o=i<3?t:n===null?n=Object.getOwnPropertyDescriptor(t,r):n,s;if(typeof Reflect==="object"&&typeof Reflect.decorate==="function")o=Reflect.decorate(e,t,r,n);else for(var a=e.length-1;a>=0;a--)if(s=e[a])o=(i<3?s(o):i>3?s(t,r,o):s(t,r))||o;return i>3&&o&&Object.defineProperty(t,r,o),o};var c=e("psk_img_input",function(){function e(e){var r=this;t(this,e);this.__fileChangeHandler=function(e){var t=Array.from(e.target.files);if(t.length===0){return}var n=new Event(r.eventName,{bubbles:true,composed:true,cancelable:true});var i=new FileReader;i.onload=function(e){var t=e.target.result;fetch(t).then((function(e){return e.arrayBuffer()})).then((function(e){n["data"]=e;r.element.dispatchEvent(n)}));r.src=t};i.readAsDataURL(t[0])};this.__clickHandler=function(e){var t=r.element.querySelector("input");t.dispatchEvent(new MouseEvent("click"));e.stopImmediatePropagation()};this.imageSource=null;this.src=null;this.alt=null;this.placeholder="click here to select source";this.label=null;this.eventName="change"}e.prototype.componentWillLoad=function(){this.srcUpdate(this.src)};e.prototype.render=function(){return r(n,{class:"form-group"},this.label&&r("psk-label",{label:this.label}),r("div",{class:"outer-container",onClick:this.__clickHandler.bind(this)},typeof this.imageSource!=="undefined"&&this.imageSource!==null?r("div",{class:"display-img-container"},r("img",{src:this.imageSource,alt:this.alt}),r("psk-icon",{icon:"pencil"})):r("psk-label",{label:this.placeholder})),r("input",{type:"file",class:"form-control-file form-control-sm",style:{display:"none"},onChange:this.__fileChangeHandler.bind(this)}))};e.prototype.srcUpdate=function(e){this.imageSource=e};Object.defineProperty(e.prototype,"element",{get:function(){return i(this)},enumerable:true,configurable:true});Object.defineProperty(e,"watchers",{get:function(){return{src:["srcUpdate"]}},enumerable:true,configurable:true});return e}());l([s(),a()],c.prototype,"modelHandler",void 0);l([o({description:["Represent the src of the image that need to be displayed"],isMandatory:true,propertyType:"string"})],c.prototype,"src",void 0);l([o({description:["Represent the alternative text that will be displayed if the image was not able to be loaded"],isMandatory:false,propertyType:"string"})],c.prototype,"alt",void 0);l([o({description:["Represent the text that will be displayed as placeholder when src attribute is not set"],isMandatory:false,propertyType:"string"})],c.prototype,"placeholder",void 0);l([o({description:["Represent the text that will be used as label for the input"],isMandatory:false,propertyType:"string"})],c.prototype,"label",void 0);l([o({description:["Represent the event type that will be thrown when user changes the image src"],isMandatory:false,propertyType:"string"})],c.prototype,"eventName",void 0)}}}));