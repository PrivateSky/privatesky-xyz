import{r as t,h as e,c as o,g as i}from"./p-7cf930c5.js";import{C as s}from"./p-daa61edb.js";import{T as r,i as a}from"./p-bf6c63e3.js";import{a as c,i as n,f as p}from"./p-e54b1fb8.js";import{T as l}from"./p-5bd09170.js";import{T as h}from"./p-f27816ab.js";import{B as d}from"./p-6b6db862.js";var f=function(t,e,o,i){var s,r=arguments.length,a=r<3?e:null===i?i=Object.getOwnPropertyDescriptor(e,o):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,o,i);else for(var c=t.length-1;c>=0;c--)(s=t[c])&&(a=(r<3?s(a):r>3?s(e,o,a):s(e,o))||a);return r>3&&a&&Object.defineProperty(e,o,a),a};const y=class{constructor(e){t(this,e),this.title="",this.id=""}render(){let t={};const o=this.id.trim().replace(/(\s+|:+|\/+)/g,"-").toLowerCase();o&&(t.id=o);let i=null;return this.title&&(i=e("div",{class:"card-header"},e("h5",null,this.title,o.length>0?e("psk-copy-clipboard",{id:o},"#"):null),e("slot",{name:"toolbar"}))),e("div",Object.assign({class:"card psk-card"},t),i,e("div",{class:"card-body"},e("slot",null)))}};f([d()],y.prototype,"modelHandler",void 0),f([s(),l({description:"This property is the title that will be rendered in title specific format.",isMandatory:!1,propertyType:"string"})],y.prototype,"title",void 0),f([l({description:"This property is the id which will be attached to the component so finding the component in the DOM should be simplified.\n\t\t\t\t\tThe id is also simplifying the navigation to that section of the page where the component is rendered.\n\t\t\t\t\tSpecial characters(Example : ':','/') will be replaced with dash('-').",isMandatory:!1,propertyType:"string"})],y.prototype,"id",void 0);var b=function(t,e,o,i){var s,r=arguments.length,a=r<3?e:null===i?i=Object.getOwnPropertyDescriptor(e,o):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,o,i);else for(var c=t.length-1;c>=0;c--)(s=t[c])&&(a=(r<3?s(a):r>3?s(e,o,a):s(e,o))||a);return r>3&&a&&Object.defineProperty(e,o,a),a};const m=class{constructor(e){t(this,e),this.getHistoryType=o(this,"getHistoryType",7),this.id="",this.chapterToken=""}componentWillLoad(){this.getHistoryType.emit((t,e)=>{if(t)console.log(t);else switch(e){case"browser":case"hash":this.chapterToken="?chapter=";break;case"query":this.chapterToken="&chapter="}})}_copyToClipboardHandler(t){try{let e=window.location.href;-1!==window.location.href.indexOf(this.chapterToken)&&(e=window.location.href.split(this.chapterToken)[0]),navigator.clipboard.writeText(`${e}${this.chapterToken}${t}`);const o=this.element.querySelector(".copy-tooltip");o.innerHTML=r,o.setAttribute("class","copy-tooltip copied"),c(t,n(this.element,"psk-page"))}catch(t){console.error(t)}}_resetTooltip(){const t=this.element.querySelector(".copy-tooltip");t.innerHTML=a,t.setAttribute("class","copy-tooltip")}_isCopySupported(){let t=!!document.queryCommandSupported;return["copy","cut"].forEach(e=>{t=t&&!!document.queryCommandSupported(e)}),t}render(){const t=p(this.id.trim());if(0!==t.length&&this._isCopySupported())return e("div",{class:"tooltip_container",onClick:e=>{e.stopImmediatePropagation(),this._copyToClipboardHandler(t)},onMouseOut:()=>{this._resetTooltip()}},e("a",{class:"mark",href:"#"+t,onClick:t=>{t.preventDefault()}},e("slot",null)),e("span",{class:"copy-tooltip"},a))}get element(){return i(this)}};b([s(),h({eventName:"getHistoryType",controllerInteraction:{required:!0},description:"This event gets the history type in order to see what identificator to use for the selected chapter Token.\n                  The three types of token that can be returned are : browser, hash or query."})],m.prototype,"getHistoryType",void 0),b([l({description:"This property is the id of the textzone that will be copied to the clipboard.\n                  It is necessary (but not mandatory) so the URL can be copied in a simplified fashion.\n                  Special characters(Example : ':','/') will be replaced with dash('-').",isMandatory:!1,propertyType:"string"})],m.prototype,"id",void 0);export{y as psk_card,m as psk_copy_clipboard}