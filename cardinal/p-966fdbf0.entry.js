import{r as t,h as e,g as i}from"./p-87f0c668.js";import"./p-377956a8.js";import"./p-185b2ebc.js";import"./p-a5fc534d.js";import{B as s}from"./p-67458612.js";import{C as l}from"./p-b0f98b39.js";import{T as o}from"./p-9a6ac7e0.js";import{P as r}from"./p-e995cab0.js";var n=function(t,e,i,s){var l,o=arguments.length,r=o<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,i,s);else for(var n=t.length-1;n>=0;n--)(l=t[n])&&(r=(o<3?l(r):o>3?l(e,i,r):l(e,i))||r);return o>3&&r&&Object.defineProperty(e,i,r),r};const p=class{constructor(e){t(this,e),this.label="Select files",this.listFiles=!1,this.filesAppend=!1,this.files=[]}triggerBrowseFile(t){t.preventDefault(),t.stopImmediatePropagation(),this.htmlElement.querySelector("input").click()}dispatchEvent(){let t=new r(this.eventName,this.files,{bubbles:!0,composed:!0,cancelable:!0});this.htmlElement.dispatchEvent(t)}addedFile(t){let e=Array.from(t.target.files);this.files=this.filesAppend?[...this.files,...e]:e,this.eventName&&(t.preventDefault(),t.stopImmediatePropagation(),this.dispatchEvent(),t.target.value=null)}deleteFileFromList(t){this.files&&(this.files=this.files.filter(e=>e!=t),this.dispatchEvent())}mapFileToDiv(t){return e("div",{class:"fileDiv"},e("button",{type:"button",class:"btn btn-secondary trashButton",onClick:()=>this.deleteFileFromList(t)},e("span",null,"X")),e("p",null,t.name))}render(){let t={},i=null;return"directory"===this.accept&&(t={directory:!0,mozdirectory:!0,webkitdirectory:!0},this.accept=null),this.listFiles&&this.files&&(i=e("div",{class:this.files.length>0?"selectedFiles":""},this.files.map(t=>this.mapFileToDiv(t)))),[e("button",{type:"button",class:"btn btn-secondary",onClick:this.triggerBrowseFile.bind(this)},e("slot",null),e("label",null,this.label,e("input",Object.assign({multiple:!0},t,{accept:this.accept,type:"file",onClick:t=>{t.stopImmediatePropagation()},onChange:this.addedFile.bind(this),class:"form-control-file form-control-sm"})))),i,this.eventName?null:e("h5",{class:"mt-4"},"No controller set for this component!")]}get htmlElement(){return i(this)}};n([l(),s()],p.prototype,"modelHandler",void 0),n([o({description:"This is the label of the button",isMandatory:!1,propertyType:"string",defaultValue:"Select files"})],p.prototype,"label",void 0),n([o({description:"This property tells the component which types of files can be uploaded from the user's device.",isMandatory:!1,propertyType:"string",specialNote:"If this property is missing, then all types of files can be uploaded."})],p.prototype,"accept",void 0),n([o({description:"This property tells the component if the list of uploaded files will be visible.",isMandatory:!1,propertyType:"boolean",defaultValue:!1,specialNote:"If this property is missing, then the list of uploaded files will be hidden."})],p.prototype,"listFiles",void 0),n([o({description:"This property tells the component if the uploaded files should be appended to the existing file list.",isMandatory:!1,propertyType:"boolean",defaultValue:!1,specialNote:"If this property is missing, then the list of uploaded files will be overridden every time the user select files again."})],p.prototype,"filesAppend",void 0),p.style=".fileDiv{display:flex}.trashButton{margin:0 5px 0 0;padding:0 !important;border:0 !important}";export{p as psk_files_chooser}